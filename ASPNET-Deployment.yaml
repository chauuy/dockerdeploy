apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnet-deployment
  namespace: mssql
#--Ajouter une App OpenShift et pas seulement un Deployment
  labels:
    app: aspnet-deployment
    app.kubernetes.io/component: aspnet-deployment
    app.kubernetes.io/instance: aspnet-deployment
    app.kubernetes.io/part-of: myaspnet
#--
spec:
  selector:
    matchLabels:
      app: aspnet-deployment
#      version: v15.0
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: aspnet-deployment
#        version: v15.0
    spec:
      containers:
        - name: aspnet-container
          image: "mcr.microsoft.com/dotnet/core/samples:aspnetapp"
          ports:
            - containerPort: 8080
          env:
           - name: ASPNETCORE_URLS
             value: "http://+:8080"
#Attention: command pas toujours accepte par image (idem que CMD dans Dockerfile)
          command: ["dotnet"]
          args: ["/app/aspnetapp.dll"]
---
apiVersion: v1
kind: Service
metadata:
  name: aspnet-deployment
  namespace: mssql
  labels: 
   app: aspnet-deployment
   app.kubernetes.io/component: aspnet-deployment
   app.kubernetes.io/instance: aspnet-deployment
   app.kubernetes.io/part-of: myaspnet
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  selector:
    app: aspnet-deployment
    deploymentconfig: aspnet-deployment
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: aspnet-deployment
  namespace: mssql
  labels:
    app: aspnet-deployment
    app.kubernetes.io/component: aspnet-deployment
    app.kubernetes.io/instance: aspnet-deployment
    app.kubernetes.io/part-of: myaspnet
spec:
  host: aspnet-deployment-mssql.apps-crc.testing
  to:
    kind: Service
    name: aspnet-deployment
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None

